import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// Product class representing an item for sale
class Product {
    private int id;
    private String name;
    private double price;

    public Product(int id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }

    public int getId() { return id; }
    public String getName() { return name; }
    public double getPrice() { return price; }

    @Override
    public String toString() {
        return id + ": " + name + " - $" + price;
    }
}

// ShoppingCart to hold products selected by the user
class ShoppingCart {
    private List<Product> items = new ArrayList<>();

    public void addProduct(Product product) {
        items.add(product);
        System.out.println(product.getName() + " added to cart.");
    }

    public void viewCart() {
        if (items.isEmpty()) {
            System.out.println("Your cart is empty.");
            return;
        }
        System.out.println("Items in your cart:");
        for (Product p : items) {
            System.out.println("- " + p);
        }
    }

    public double getTotal() {
        double total = 0;
        for (Product p : items) {
            total += p.getPrice();
        }
        return total;
    }

    public void clear() {
        items.clear();
    }

    public boolean isEmpty() {
        return items.isEmpty();
    }
}

// Main class to simulate e-commerce platform operations
public class ECommercePlatform {

    private static List<Product> productCatalog = new ArrayList<>();
    private static ShoppingCart cart = new ShoppingCart();

    public static void main(String[] args) {
        initializeProducts();

        Scanner scanner = new Scanner(System.in);
        boolean exit = false;

        while (!exit) {
            printMenu();
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    viewProducts();
                    break;
                case 2:
                    System.out.print("Enter product ID to add to cart: ");
                    int productId = scanner.nextInt();
                    addToCart(productId);
                    break;
                case 3:
                    cart.viewCart();
                    break;
                case 4:
                    checkout();
                    break;
                case 5:
                    exit = true;
                    System.out.println("Thanks for shopping!");
                    break;
                default:
                    System.out.println("Invalid choice, try again.");
            }
        }

        scanner.close();
    }

    private static void initializeProducts() {
        productCatalog.add(new Product(1, "Laptop", 999.99));
        productCatalog.add(new Product(2, "Smartphone", 499.99));
        productCatalog.add(new Product(3, "Headphones", 149.99));
        productCatalog.add(new Product(4, "Smartwatch", 199.99));
    }

    private static void printMenu() {
        System.out.println("\n--- E-Commerce Platform ---");
        System.out.println("1. View Products");
        System.out.println("2. Add Product to Cart");
        System.out.println("3. View Cart");
        System.out.println("4. Checkout");
        System.out.println("5. Exit");
    }

    private static void viewProducts() {
        System.out.println("\nAvailable Products:");
        for (Product p : productCatalog) {
            System.out.println(p);
        }
    }

    private static void addToCart(int productId) {
        Product product = findProductById(productId);
        if (product != null) {
            cart.addProduct(product);
        } else {
            System.out.println("Product not found.");
        }
    }

    private static Product findProductById(int id) {
        for (Product p : productCatalog) {
            if (p.getId() == id) {
                return p;
            }
        }
        return null;
    }

    private static void checkout() {
        if (cart.isEmpty()) {
            System.out.println("Your cart is empty. Add some products first.");
            return;
        }
        cart.viewCart();
        System.out.printf("Total amount: $%.2f\n", cart.getTotal());
        System.out.println("Checkout complete. Thank you for your purchase!");
        cart.clear();
    }
}
